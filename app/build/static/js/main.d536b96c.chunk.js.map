{"version":3,"sources":["directions.ts","moves.ts","App.tsx","useAllRefs.ts","reportWebVitals.ts","index.tsx"],"names":["directions","directions_per_piece","R","Q","B","H","K","check","x","y","lx","ly","make_array","t","i","push","pawns","map","ele","white_pieces","black_pieces","gen_direc_wrapper","direction","board","x0","y0","side","res","gen_direc","side_finder","name","includes","length","Number","nx","ny","stop_mate","entries","vali","j","valj","s","Pieces","finder","some","direc","f","temp","JSON","parse","stringify","get_mapping_helper","peice","get_mapping","peiece","piece_loc","king_x","king_y","vis","targ","sign","undefined","forEach","coords","origin","build_coords","white_castle_left","white_castle_right","black_castle_left","black_castle_right","this","first_move","PieceCreator","cur_coords","prototype","Piece","thisIsARef","pieceInfo","src","useRef","toLowerCase","style","backgroundImage","ref","onMouseMove","e","className","Td","row","col","children","piece","id","onMouseDown","loc","currentTarget","childPosX","getBoundingClientRect","left","childPosY","top","initBoard","check4mate","setBoard","setTurn","a","ChessBoard","useState","turn","Refs","R1","H1","B1","Q1","K1","B2","H2","R2","R3","H3","B3","Q2","K2","B4","H4","R4","P1","P2","P3","P4","P5","P6","P7","P8","P9","P10","P11","P12","P13","P14","P15","P16","parentInfoRef","clickedRef","useEffect","alert","list","Array","from","target","classList","targetRef","current","zIndex","transform","clientX","clientY","processed","reduce","acc","cur","join","dropLoc","document","getElementById","add","onMouseUp","dropTarget","elementsFromPoint","nodeName","drop_target","tboard","before_move","after_move","p","remove","pieceName","pieceRN","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d536b96c.chunk.js","sourcesContent":["export const directions = {\r\n  ul: [\r\n    [-1, -2, -3, -4, -5, -6, -7],\r\n    [-1, -2, -3, -4, -5, -6, -7],\r\n  ],\r\n  ur: [\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n    [-1, -2, -3, -4, -5, -6, -7],\r\n  ],\r\n  dl: [\r\n    [-1, -2, -3, -4, -5, -6, -7],\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n  ],\r\n  dr: [\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n  ],\r\n  l: [\r\n    [-1, -2, -3, -4, -5, -6, -7],\r\n    [0, 0, 0, 0, 0, 0, 0],\r\n  ],\r\n  r: [\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n    [0, 0, 0, 0, 0, 0, 0],\r\n  ],\r\n  u: [\r\n    [0, 0, 0, 0, 0, 0, 0],\r\n    [-1, -2, -3, -4, -5, -6, -7],\r\n  ],\r\n  d: [\r\n    [0, 0, 0, 0, 0, 0, 0],\r\n    [1, 2, 3, 4, 5, 6, 7],\r\n  ],\r\n  h: [\r\n    [2, 2, -2, -2, 1, -1, 1, -1],\r\n    [1, -1, 1, -1, 2, 2, -2, -2],\r\n  ],\r\n  k: [\r\n    [1, 0, -1, 0, 1, -1, 1, -1],\r\n    [0, -1, 0, 1, 1, 1, -1, -1],\r\n  ],\r\n};\r\n","import { dir } from 'console';\r\nimport { Duplex } from 'stream';\r\nimport { directions } from './directions';\r\n\r\n// DIRECTIONS\r\nconst { l, u, d, r, ul, dl, ur, dr, h, k } = directions;\r\nconst directions_per_piece: {\r\n\t[propname: string]: number[][][];\r\n} = {\r\n\tR: [l, r, u, d],\r\n\tQ: [l, r, u, d, ul, ur, dl, dr],\r\n\tB: [ul, ur, dl, dr],\r\n\tH: [h],\r\n\tK: [k],\r\n};\r\n\r\ninterface origin {\r\n\tcoords: { [prop: string]: Array<number> };\r\n\twhite_castle_left: boolean;\r\n\twhite_castle_right: boolean;\r\n\tblack_castle_left: boolean;\r\n\tblack_castle_right: boolean;\r\n\tfinder: (this: any, board: Array<Array<string>>, x: number, y: number) => (number[][] | null)[] | null;\r\n}\r\nexport interface chessPiece {\r\n\tside: string;\r\n\tname: string;\r\n\tcur_coords: () => [number, number];\r\n\tfirst_piece?: boolean;\r\n}\r\n\r\nexport const check: (x: number, y: number, lx: number, ly: number) => true | false = (x, y, lx, ly) => {\r\n\tif (x < 0 || y < 0 || x >= lx || y >= ly) return false;\r\n\treturn true;\r\n};\r\n\r\nexport const make_array: (x: number) => Array<string> = x => {\r\n\tlet t = [];\r\n\tfor (let i = 0; i < x; i++) t.push('');\r\n\treturn t;\r\n};\r\n\r\nexport const pawns = make_array(16).map((ele, i) => {\r\n\treturn `P${i + 1}`;\r\n});\r\nexport const white_pieces = ['R1', 'H1', 'B1', 'Q1', 'K1', 'B2', 'H2', 'R2'];\r\nexport const black_pieces = ['R3', 'H3', 'B3', 'Q2', 'K2', 'B4', 'H4', 'R4'];\r\n\r\nconst build_coords: () => { [prop: string]: Array<number> } = () => {\r\n\tlet res: { [prop: string]: Array<number> } = {};\r\n\tpawns.forEach((ele, i) => {\r\n\t\tif (i <= 7) res[ele] = [i, 1];\r\n\t\telse res[ele] = [i - 8, 6];\r\n\t});\r\n\twhite_pieces.forEach((ele, i) => {\r\n\t\tres[ele] = [i, 0];\r\n\t});\r\n\tblack_pieces.forEach((ele, i) => {\r\n\t\tres[ele] = [i, 7];\r\n\t});\r\n\treturn res;\r\n};\r\n\r\nconst gen_direc_wrapper = (direction: number[][][], board: Array<Array<string>>, x0: number, y0: number, side: string) => {\r\n\tlet res = [];\r\n\tfor (let i of direction) {\r\n\t\tres.push(gen_direc(i, board, x0, y0, side));\r\n\t}\r\n\r\n\treturn res;\r\n};\r\n\r\nexport const side_finder = (name: string) => {\r\n\tif (black_pieces.includes(name)) return 'B';\r\n\tif (white_pieces.includes(name)) return 'W';\r\n\tif (name.length === 3 || Number(name[1]) > 8) return 'B';\r\n\treturn 'W';\r\n};\r\n\r\nconst gen_direc = (direction: number[][], board: Array<Array<string>>, x0: number, y0: number, side: string) => {\r\n\tlet res = [];\r\n\tlet lx = board[0].length;\r\n\tlet ly = board.length;\r\n\tfor (let i = 0; i < direction[0].length; i++) {\r\n\t\tlet nx = x0 + direction[0][i],\r\n\t\t\tny = y0 + direction[1][i];\r\n\t\tif (check(nx, ny, lx, ly)) {\r\n\t\t\tif (board[ny][nx].length !== 0) {\r\n\t\t\t\tlet targSide = side_finder(board[ny][nx]);\r\n\r\n\t\t\t\tif (side === targSide) {\r\n\t\t\t\t\tif (board[y0][x0][0] === 'H' || board[y0][x0][0] === 'K') continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tres.push([nx, ny]);\r\n\t\t\t\t\tif (board[y0][x0][0] === 'H' || board[y0][x0][0] === 'K') continue;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tres.push([nx, ny]);\r\n\t\t}\r\n\t}\r\n\treturn res;\r\n};\r\n\r\nexport const stop_mate = (side: string, board: Array<Array<string>>): true | false => {\r\n\tfor (let [i, vali] of board.entries()) {\r\n\t\tfor (let [j, valj] of vali.entries()) {\r\n\t\t\tif (valj.length === 0) continue;\r\n\t\t\tlet s = side_finder(valj);\r\n\t\t\tif (side !== s) continue;\r\n\t\t\tlet directions = (Pieces[valj] as any).finder(board, j, i);\r\n\t\t\t//check to see if there is atleast one legal move\r\n\t\t\tlet res = directions.some((direc: number[][]) => {\r\n\t\t\t\treturn direc.some(([f, s]: number[]) => {\r\n\t\t\t\t\tlet temp = JSON.parse(JSON.stringify(board));\r\n\t\t\t\t\ttemp[s][f] = valj;\r\n\t\t\t\t\ttemp[i][j] = '';\r\n\t\t\t\t\treturn get_mapping_helper(temp, valj);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tif (res) return true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nexport const piece_loc = (board: Array<Array<string>>, peiece: string): [number, number] => {\r\n\tfor (let [i, vali] of board.entries()) {\r\n\t\tfor (let [j, valj] of vali.entries()) {\r\n\t\t\tif (valj === peiece) return [i, j];\r\n\t\t}\r\n\t}\r\n\treturn [-1, -1];\r\n};\r\n\r\nexport const get_mapping_helper = (board: Array<Array<string>>, peice: string) => {\r\n\tlet side = side_finder(peice);\r\n\r\n\tlet check = get_mapping(board, side === 'W' ? 'B' : 'W');\r\n\tlet [king_x, king_y] = piece_loc(board, `K${side === 'W' ? 1 : 2}`);\r\n\r\n\tif (check[king_x][king_y] === 'X') return false;\r\n\treturn true;\r\n};\r\n\r\nexport const get_mapping = (board: Array<Array<string>>, side: string) => {\r\n\tlet lx = board[0].length;\r\n\tlet ly = board.length;\r\n\tlet vis = make_array(ly).map(ele => make_array(lx));\r\n\r\n\tfor (let [i, vali] of board.entries()) {\r\n\t\tfor (let [j, valj] of vali.entries()) {\r\n\t\t\tif (valj.length > 0 && side_finder(valj) === side) {\r\n\t\t\t\tlet targ;\r\n\t\t\t\tif (valj[0] === 'P') {\r\n\t\t\t\t\tlet sign = side === 'W' ? -1 : 1;\r\n\t\t\t\t\ttarg = gen_direc_wrapper(\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t[1, -1],\r\n\t\t\t\t\t\t\t\t[1 * sign, 1 * sign],\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tboard,\r\n\t\t\t\t\t\tj,\r\n\t\t\t\t\t\ti,\r\n\t\t\t\t\t\tside\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (valj.length !== 0) {\r\n\t\t\t\t\ttarg = gen_direc_wrapper(directions_per_piece[valj[0]], board, j, i, side);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (targ === undefined) continue;\r\n\t\t\t\telse\r\n\t\t\t\t\tfor (let x of targ) {\r\n\t\t\t\t\t\tx.forEach(coords => (vis[coords[1]][coords[0]] = 'X'));\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn vis;\r\n};\r\n\r\nconst origin: origin = {\r\n\tcoords: build_coords(),\r\n\twhite_castle_left: false,\r\n\twhite_castle_right: false,\r\n\tblack_castle_left: false,\r\n\tblack_castle_right: false,\r\n\tfinder(board, x, y) {\r\n\t\tlet lx = board[0].length,\r\n\t\t\tly = board.length;\r\n\t\tif (this.name[0] === 'R') {\r\n\t\t\treturn gen_direc_wrapper(directions_per_piece['R'], board, x, y, this.side);\r\n\t\t} else if (this.name[0] === 'B') {\r\n\t\t\treturn gen_direc_wrapper(directions_per_piece['B'], board, x, y, this.side);\r\n\t\t} else if (this.name[0] === 'H') {\r\n\t\t\treturn gen_direc_wrapper(directions_per_piece['H'], board, x, y, this.side);\r\n\t\t} else if (this.name[0] === 'K') {\r\n\t\t\treturn gen_direc_wrapper(directions_per_piece['K'], board, x, y, this.side);\r\n\t\t} else if (this.name[0] === 'Q') {\r\n\t\t\treturn gen_direc_wrapper(directions_per_piece['Q'], board, x, y, this.side);\r\n\t\t} else if (this.name[0] === 'P') {\r\n\t\t\tlet res = [];\r\n\t\t\tlet sign = -1;\r\n\t\t\tif (this.side === 'B') sign += 2;\r\n\r\n\t\t\tif (this.first_move === true) {\r\n\t\t\t\tif (check(x, y + 2 * sign, lx, ly) && board[y + 2 * sign][x].length === 0) {\r\n\t\t\t\t\tres.push([x, y + 2 * sign]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (check(x + 1, y + 1 * sign, lx, ly)) {\r\n\t\t\t\tif (board[y + 1 * sign][x + 1].length !== 0) {\r\n\t\t\t\t\tlet ts = side_finder(board[y + 1 * sign][x + 1]);\r\n\t\t\t\t\tif (ts !== this.side) res.push([x + 1, y + 1 * sign]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (check(x - 1, y + 1 * sign, lx, ly)) {\r\n\t\t\t\tif (board[y + 1 * sign][x - 1].length !== 0) {\r\n\t\t\t\t\tlet ts = side_finder(board[y + 1 * sign][x - 1]);\r\n\t\t\t\t\tif (ts !== this.side) res.push([x - 1, y + 1 * sign]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (check(x, y + 1 * sign, lx, ly) && board[y + 1 * sign][x].length === 0) res.push([x, y + 1 * sign]);\r\n\t\t\treturn [res];\r\n\t\t}\r\n\t\treturn null;\r\n\t},\r\n};\r\n\r\nfunction PieceCreator(this: any, name: string, side: string) {\r\n\tthis.side = side;\r\n\tthis.name = name;\r\n\tthis.cur_coords = () => {\r\n\t\treturn this.coords[this.name];\r\n\t};\r\n\tif (name[0] === 'P') {\r\n\t\tthis.first_move = true;\r\n\t}\r\n}\r\nPieceCreator.prototype = origin;\r\n\r\nexport const Pieces: { [prop: string]: chessPiece } = {};\r\n\r\nwhite_pieces.forEach(ele => {\r\n\tPieces[ele] = new (PieceCreator as any)(ele, 'W');\r\n});\r\nblack_pieces.forEach(ele => {\r\n\tPieces[ele] = new (PieceCreator as any)(ele, 'B');\r\n});\r\npawns.forEach((ele, i) => {\r\n\tPieces[ele] = new (PieceCreator as any)(ele, `${i <= 7 ? 'W' : 'B'}`);\r\n});\r\n\r\nexport {};\r\n","import { type } from 'os';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Children } from 'react';\nimport './App.css';\nimport { Pieces, side_finder, piece_loc, make_array, chessPiece, get_mapping, get_mapping_helper, stop_mate } from './moves';\nimport { useAllRefs } from './useAllRefs';\n\ninterface pos {\n\tchildPosY: number;\n\tchildPosX: number;\n\tloc: string;\n}\n\ntype newMouseEventOnDiv = React.MouseEvent<HTMLDivElement, MouseEvent> & pos;\n\ntype newMouseEventOnCell = React.MouseEvent<HTMLTableCellElement, MouseEvent> & pos;\n\ninterface toTd {\n\ti: boolean;\n\trow: number;\n\tcol: number;\n\tj: boolean;\n\tpiece: boolean;\n\tchildren: JSX.Element | null;\n}\n\ninterface toPiece {\n\tthisIsARef: React.MutableRefObject<HTMLDivElement | null>;\n\tname: string;\n\tpieceInfo: chessPiece;\n}\n\nconst Piece: (props: toPiece) => JSX.Element = ({ thisIsARef, name, pieceInfo }) => {\n\tconst clickedRef = useRef<true | false>(false);\n\tconst src = `${pieceInfo.side}${name[0]}`.toLowerCase();\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tbackgroundImage: `url(\"${src}.png\")`,\n\t\t\t}}\n\t\t\tref={thisIsARef}\n\t\t\tonMouseMove={e => {}}\n\t\t\tclassName={`piece ${name}`}></div>\n\t);\n};\n\nconst Td: (props: toTd) => JSX.Element = ({ row, col, i, j, piece, children }) => {\n\treturn (\n\t\t<td\n\t\t\tid={`${row}${col}`}\n\t\t\tonMouseDown={(e: newMouseEventOnCell) => {\n\t\t\t\te.loc = e.currentTarget.id;\n\t\t\t\te.childPosX = e.currentTarget.getBoundingClientRect().left;\n\t\t\t\te.childPosY = e.currentTarget.getBoundingClientRect().top;\n\t\t\t\treturn;\n\t\t\t}}\n\t\t\tonMouseMove={(e: newMouseEventOnCell) => {\n\t\t\t\treturn;\n\t\t\t}}\n\t\t\tclassName={`${i !== j ? 'oddCol' : 'evenCol'}`}>\n\t\t\t{children}\n\t\t</td>\n\t);\n};\n\nconst initBoard: Array<Array<string>> = [];\nmake_array(8).forEach(ele => {\n\tinitBoard.push(make_array(8));\n});\nfor (let i in Pieces) {\n\tlet [x, y] = Pieces[i].cur_coords();\n\tinitBoard[7 - y][x] = Pieces[i].name;\n}\n\nconst check4mate = async (\n\tname: string,\n\tboard: Array<Array<string>>,\n\tsetBoard: React.Dispatch<React.SetStateAction<string[][]>>,\n\tsetTurn: React.Dispatch<React.SetStateAction<string>>\n): Promise<boolean> => {\n\tlet before_move = get_mapping_helper(board, name);\n\tif (before_move) {\n\t\treturn false;\n\t}\n\tlet res = stop_mate(side_finder(name), board);\n\tif (!res) {\n\t\tsetBoard(initBoard);\n\t\tfor (let i in Pieces) {\n\t\t\tif (i[0] === 'P') {\n\t\t\t\t(Pieces[i] as any).first_move = true;\n\t\t\t}\n\t\t}\n\t\tsetTurn('W');\n\t\treturn true;\n\t}\n\treturn false;\n};\n\nconst ChessBoard = () => {\n\tconst [board, setBoard] = useState<Array<Array<string>>>(initBoard);\n\tconst [turn, setTurn] = useState<string>('W');\n\tconst Refs = useAllRefs();\n\tconst parentInfoRef = useRef<null | {\n\t\tx: number;\n\t\ty: number;\n\t\tname: string;\n\t\tloc: string;\n\t\tdropLoc: string[];\n\t}>(null);\n\tconst clickedRef = useRef<false | true>(false);\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tlet check_white = await check4mate('K1', board, setBoard, setTurn);\n\t\t\tif (check_white) {\n\t\t\t\talert('Checkmate.  Black wins.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet check_black = await check4mate('K2', board, setBoard, setTurn);\n\t\t\tif (check_black) {\n\t\t\t\talert('Checkmate.  White wins.');\n\t\t\t\treturn;\n\t\t\t}\n\t\t})();\n\t});\n\n\tlet a = [0, 1, 2, 3, 4, 5, 6, 7];\n\treturn (\n\t\t<div\n\t\t\tonMouseDown={(e: newMouseEventOnDiv) => {\n\t\t\t\tconst list = Array.from((e.target as HTMLDivElement).classList);\n\n\t\t\t\tif (!list.includes('piece')) return;\n\t\t\t\tconst name = list[1];\n\t\t\t\tif (Pieces[name].side !== turn) return;\n\t\t\t\tconst targetRef = Refs[name];\n\n\t\t\t\tif (targetRef.current !== null) {\n\t\t\t\t\ttargetRef.current.style.zIndex = '100';\n\t\t\t\t\ttargetRef.current.style.transform = `translateX(${e.clientX - 15 - e.childPosX}px) translateY(${e.clientY - 15 - e.childPosY}px)`;\n\n\t\t\t\t\tlet dropLocations = (Pieces[name] as any).finder(board, Number(e.loc[0]), Number(e.loc[1]));\n\n\t\t\t\t\tlet processed: string[] = dropLocations.reduce((acc: [], cur: number[][], i: number) => {\n\t\t\t\t\t\treturn [\n\t\t\t\t\t\t\t...acc,\n\t\t\t\t\t\t\t...cur.map((ele: number[]) => {\n\t\t\t\t\t\t\t\treturn ele.join('');\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t];\n\t\t\t\t\t}, []);\n\n\t\t\t\t\tclickedRef.current = true;\n\t\t\t\t\tparentInfoRef.current = {\n\t\t\t\t\t\tx: e.childPosX,\n\t\t\t\t\t\ty: e.childPosY,\n\t\t\t\t\t\tloc: e.loc,\n\t\t\t\t\t\tname: Array.from((e.target as HTMLDivElement).classList)[1],\n\t\t\t\t\t\tdropLoc: processed,\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (let j of processed) {\n\t\t\t\t\t\tlet x = document.getElementById(j);\n\t\t\t\t\t\tif (x !== null) {\n\t\t\t\t\t\t\tx.classList.add('selCol');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}}\n\t\t\tonMouseUp={e => {\n\t\t\t\tif (clickedRef.current === false || parentInfoRef.current === null) return;\n\n\t\t\t\tconst { name, dropLoc, loc } = parentInfoRef.current;\n\t\t\t\tconst targetRef = Refs[name];\n\t\t\t\tlet dropTarget: any = null;\n\t\t\t\tArray.from(document.elementsFromPoint(e.clientX, e.clientY)).forEach(ele => {\n\t\t\t\t\tif (dropTarget !== null) return;\n\t\t\t\t\tif (ele.nodeName === 'TD') dropTarget = ele;\n\t\t\t\t});\n\n\t\t\t\tdrop_target: {\n\t\t\t\t\tif (dropTarget !== null && dropLoc.includes(dropTarget.id)) {\n\t\t\t\t\t\tlet x = Number(dropTarget.id[1]);\n\t\t\t\t\t\tlet y = Number(dropTarget.id[0]);\n\t\t\t\t\t\tlet tboard = JSON.parse(JSON.stringify(board));\n\n\t\t\t\t\t\t//check if you are in check!\n\t\t\t\t\t\tlet before_move = get_mapping_helper(board, name);\n\t\t\t\t\t\ttboard[loc[1]][loc[0]] = '';\n\t\t\t\t\t\ttboard[x][y] = name;\n\t\t\t\t\t\tlet after_move = get_mapping_helper(tboard, name);\n\n\t\t\t\t\t\tif (!before_move && !after_move) {\n\t\t\t\t\t\t\talert(\"you're in check\");\n\t\t\t\t\t\t\tbreak drop_target;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!after_move) break drop_target;\n\n\t\t\t\t\t\t//check if you can take king...\n\t\t\t\t\t\tif (board[x][y][0] === 'K') {\n\t\t\t\t\t\t\tif (board[x][y][1] === '1') alert('White wins');\n\t\t\t\t\t\t\telse alert('Black wins');\n\t\t\t\t\t\t\tsetBoard(initBoard);\n\t\t\t\t\t\t\tsetTurn('W');\n\t\t\t\t\t\t\tbreak drop_target;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (name[0] === 'P' && 'first_move' in Pieces[name]) (Pieces[name] as any).first_move = false;\n\t\t\t\t\t\tsetBoard(tboard);\n\t\t\t\t\t\tsetTurn(p => (p === 'W' ? 'B' : 'W'));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (targetRef.current !== null) {\n\t\t\t\t\ttargetRef.current.style.zIndex = '10';\n\t\t\t\t\ttargetRef.current.style.transform = ``;\n\t\t\t\t}\n\n\t\t\t\tfor (let j of dropLoc) {\n\t\t\t\t\tlet x = document.getElementById(j);\n\t\t\t\t\tif (x !== null) {\n\t\t\t\t\t\tx.classList.remove('selCol');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tclickedRef.current = false;\n\t\t\t\tparentInfoRef.current = null;\n\t\t\t}}\n\t\t\tonMouseMove={(e: newMouseEventOnDiv) => {\n\t\t\t\tif (clickedRef.current === false || parentInfoRef.current === null) return;\n\n\t\t\t\tconst { name: pieceName, loc: pieceLoc, x, y } = parentInfoRef.current;\n\t\t\t\tconst targetRef = Refs[pieceName];\n\n\t\t\t\tif (targetRef.current !== null) {\n\t\t\t\t\ttargetRef.current.style.transform = `translateX(${e.clientX - 15 - x}px) translateY(${e.clientY - 15 - y}px)`;\n\t\t\t\t}\n\t\t\t}}\n\t\t\tclassName=\"board\">\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t{a.map(i => (\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t{a.map(j => {\n\t\t\t\t\t\t\t\tlet pieceRN = null;\n\t\t\t\t\t\t\t\tif (board[i][j] !== '') pieceRN = <Piece pieceInfo={Pieces[board[i][j]]} name={`${board[i][j]}`} thisIsARef={Refs[`${board[i][j]}`]} />;\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Td row={j} col={i} piece={i === 0 && j === 0} i={i % 2 === 1} j={j % 2 === 0}>\n\t\t\t\t\t\t\t\t\t\t{pieceRN}\n\t\t\t\t\t\t\t\t\t</Td>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"wrapper\">\n\t\t\t<ChessBoard />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import { useRef } from \"react\";\r\n\r\nexport function useAllRefs(): {\r\n  [prop: string]: React.MutableRefObject<HTMLDivElement | null>;\r\n} {\r\n  return {\r\n    R1: useRef<HTMLDivElement | null>(null),\r\n    H1: useRef<HTMLDivElement | null>(null),\r\n    B1: useRef<HTMLDivElement | null>(null),\r\n    Q1: useRef<HTMLDivElement | null>(null),\r\n    K1: useRef<HTMLDivElement | null>(null),\r\n    B2: useRef<HTMLDivElement | null>(null),\r\n    H2: useRef<HTMLDivElement | null>(null),\r\n    R2: useRef<HTMLDivElement | null>(null),\r\n    R3: useRef<HTMLDivElement | null>(null),\r\n    H3: useRef<HTMLDivElement | null>(null),\r\n    B3: useRef<HTMLDivElement | null>(null),\r\n    Q2: useRef<HTMLDivElement | null>(null),\r\n    K2: useRef<HTMLDivElement | null>(null),\r\n    B4: useRef<HTMLDivElement | null>(null),\r\n    H4: useRef<HTMLDivElement | null>(null),\r\n    R4: useRef<HTMLDivElement | null>(null),\r\n    P1: useRef<HTMLDivElement | null>(null),\r\n    P2: useRef<HTMLDivElement | null>(null),\r\n    P3: useRef<HTMLDivElement | null>(null),\r\n    P4: useRef<HTMLDivElement | null>(null),\r\n    P5: useRef<HTMLDivElement | null>(null),\r\n    P6: useRef<HTMLDivElement | null>(null),\r\n    P7: useRef<HTMLDivElement | null>(null),\r\n    P8: useRef<HTMLDivElement | null>(null),\r\n    P9: useRef<HTMLDivElement | null>(null),\r\n    P10: useRef<HTMLDivElement | null>(null),\r\n    P11: useRef<HTMLDivElement | null>(null),\r\n    P12: useRef<HTMLDivElement | null>(null),\r\n    P13: useRef<HTMLDivElement | null>(null),\r\n    P14: useRef<HTMLDivElement | null>(null),\r\n    P15: useRef<HTMLDivElement | null>(null),\r\n    P16: useRef<HTMLDivElement | null>(null),\r\n  };\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}